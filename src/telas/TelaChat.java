/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import chat.Clientechat;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Eduardo
 */
public class TelaChat extends javax.swing.JInternalFrame implements ActionListener, KeyListener {

    private static final long serialVersionUID = 1L;
    private Socket socket;
    private OutputStream ou;
    private Writer ouw;
    private BufferedWriter bfw;

    /**
     * Creates new form TelaChat
     */
    public TelaChat() throws IOException {
        initComponents();
        conectar();
        escutar();

    }

    /**
     * *
     * Método usado para conectar no server socket, retorna IO Exception caso dê
     * algum erro.
     *
     * @throws IOException
     */
    public void conectar() throws IOException {

        //socket = new Socket(txtIP.getText(), Integer.parseInt(txtPorta.getText()));
        socket = new Socket("127.0.0.1", 12345);
        //socket = new Socket("192.168.0.100", 12345);
        ou = socket.getOutputStream();
        ouw = new OutputStreamWriter(ou);
        bfw = new BufferedWriter(ouw);
        bfw.write("user logado" + "\r\n");
        bfw.flush();

    }

    /*
    public void envm(String msg) throws IOException {

        bfw.write(msg + "\r\n");
        campochat.append("user logado" + " diz -> " + mensagemchat.getText() + "\r\n");

        bfw.flush();
        mensagemchat.setText("");

    }
     */
    /**
     * *
     * Método usado para enviar mensagem para o server socket
     *
     * @param msg do tipo String
     * @throws IOException retorna IO Exception caso dê algum erro.
     */
    public void enviarMensagem(String msg) throws IOException {

        if (msg.equals("Sair")) {
            bfw.write("Desconectado \r\n");
            campochat.append("Desconectado \r\n");
        } else {
            bfw.write(msg + "\r\n");
            campochat.append("user logado" + " diz -> " + mensagemchat.getText() + "\r\n");
        }
        bfw.flush();
        mensagemchat.setText("");
    }

    /**
     * Método usado para receber mensagem do servidor
     *
     * @throws IOException retorna IO Exception caso dê algum erro.
     */
    public void escutar() throws IOException {

        System.out.println("entrou no escutar");
        InputStream in = socket.getInputStream();
        InputStreamReader inr = new InputStreamReader(in);
        BufferedReader bfr = new BufferedReader(inr);
        String msg = "";

        while (!"Sair".equalsIgnoreCase(msg)) {
            if (bfr.ready()) {
                msg = bfr.readLine();
                if (msg.equals("Sair")) {
                    campochat.append("Servidor caiu! \r\n");
                } else {
                    campochat.append(msg + "\r\n");
                }
            }
        }

    }

    /**
     * *
     * Método usado quando o usuário clica em sair
     *
     * @throws IOException retorna IO Exception caso dê algum erro.
     */
    public void sair() throws IOException {

        // enviarMensagem("Sair");
        bfw.close();
        ouw.close();
        ou.close();
        socket.close();
    }

    /*
    @Override
    public void actionPerformed(ActionEvent e) {

        try {
            if (e.getActionCommand().equals(jbenviachat.getActionCommand())) {
                enviarMensagem(mensagemchat.getText());
            } else if (e.getActionCommand().equals(jbsairchat.getActionCommand())) {
                sair();
            }
        } catch (IOException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }
    }
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        campochat = new javax.swing.JTextArea();
        mensagemchat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbsairchat = new javax.swing.JButton();
        jbenviachat = new javax.swing.JButton();

        campochat.setEditable(false);
        campochat.setColumns(20);
        campochat.setRows(5);
        jScrollPane1.setViewportView(campochat);

        jLabel1.setText("Mensagem");

        jLabel2.setText("Histórico");

        jbsairchat.setText("Sair");
        jbsairchat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsairchatActionPerformed(evt);
            }
        });

        jbenviachat.setText("Enviar");
        jbenviachat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbenviachatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(mensagemchat)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jbsairchat)
                                .addGap(18, 18, 18)
                                .addComponent(jbenviachat)))
                        .addGap(0, 124, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mensagemchat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbsairchat)
                    .addComponent(jbenviachat))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbsairchatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsairchatActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jbsairchatActionPerformed

    private void jbenviachatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbenviachatActionPerformed

        try {
            enviarMensagem(mensagemchat.getText());
        } catch (IOException ex) {
            Logger.getLogger(TelaChat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbenviachatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea campochat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbenviachat;
    private javax.swing.JButton jbsairchat;
    private javax.swing.JTextField mensagemchat;
    // End of variables declaration//GEN-END:variables
/*
    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
     */
    @Override
    public void keyTyped(KeyEvent e) {

        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                enviarMensagem(mensagemchat.getText());
            } catch (IOException e1) {
                // TODO Auto-generated catch block
                e1.printStackTrace();
            }
        }
    }

    @Override
    public void keyPressed(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {

        try {
            if (e.getActionCommand().equals(jbenviachat.getActionCommand())) {
                enviarMensagem(mensagemchat.getText());
            } else if (e.getActionCommand().equals(jbsairchat.getActionCommand())) {
                sair();
            }
        } catch (IOException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }
    }
    
    
    public static void main(String[] args) throws IOException {

        TelaChat app = new TelaChat();
        //app.conectar();
        app.escutar();
        System.out.println("MAIN ENTROU");
    }
}
